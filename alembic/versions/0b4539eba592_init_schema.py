"""init schema

Revision ID: 0b4539eba592
Revises: 
Create Date: 2025-10-22 12:23:10.701822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b4539eba592'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_type', sa.Enum('GREENHOUSE', 'LEVER', 'COMPANY', name='job_source_type', native_enum=False), nullable=False),
    sa.Column('source_url', sa.String(length=1024), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('domain_root', sa.String(length=255), nullable=False),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('discovered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash')
    )
    op.create_index(op.f('ix_job_sources_domain_root'), 'job_sources', ['domain_root'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('source_type', sa.Enum('GREENHOUSE', 'LEVER', 'COMPANY', name='job_source_type', native_enum=False), nullable=False),
    sa.Column('domain_root', sa.String(length=255), nullable=False),
    sa.Column('submission_mode', sa.Enum('ATS', 'DEEPLINK', name='job_submission_mode', native_enum=False), nullable=False),
    sa.Column('jd_text', sa.Text(), nullable=False),
    sa.Column('requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('job_id_canonical', sa.String(length=255), nullable=False),
    sa.Column('scraped_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash'),
    sa.UniqueConstraint('job_id_canonical')
    )
    op.create_index(op.f('ix_jobs_domain_root'), 'jobs', ['domain_root'], unique=False)
    op.create_table('profile_identities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('preferred_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('base_location', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('trust_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('domain_root', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('signals', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('verdict', sa.Enum('AUTO_SAFE', 'NEEDS_HUMAN_APPROVAL', 'REJECT', name='trust_verdict', native_enum=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trust_events_domain_root'), 'trust_events', ['domain_root'], unique=False)
    op.create_table('whitelist',
    sa.Column('domain_root', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('ats_type', sa.String(length=64), nullable=True),
    sa.Column('approved_by', sa.String(length=255), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('domain_root')
    )
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('human_id', sa.String(length=20), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'DRAFTING', 'DRAFT_READY', 'APPROVED', 'SUBMITTED', 'REJECTED', 'CLOSED', name='application_status', native_enum=False), nullable=False),
    sa.Column('slack_channel_id', sa.String(length=64), nullable=True),
    sa.Column('slack_thread_ts', sa.String(length=32), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('canonical_job_id', sa.String(length=255), nullable=False),
    sa.Column('submission_mode', sa.Enum('ATS', 'DEEPLINK', name='application_submission_mode', native_enum=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('canonical_job_id', name='uq_applications_canonical_job_id'),
    sa.UniqueConstraint('human_id')
    )
    op.create_table('profile_facts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('identity_id', sa.UUID(), nullable=False),
    sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('tools', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('frameworks', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('projects', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('education', sa.String(length=1024), nullable=True),
    sa.Column('work_auth', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['identity_id'], ['profile_identities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_id')
    )
    op.create_table('profile_files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('identity_id', sa.UUID(), nullable=False),
    sa.Column('resume_variants', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['identity_id'], ['profile_identities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_id')
    )
    op.create_table('profile_links',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('identity_id', sa.UUID(), nullable=False),
    sa.Column('linkedin', sa.String(length=1024), nullable=True),
    sa.Column('github', sa.String(length=1024), nullable=True),
    sa.Column('portfolio', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['identity_id'], ['profile_identities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_id')
    )
    op.create_table('artifacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('JD_SNAPSHOT', 'COVER_LETTER_VERSION', 'AUTOFILL_SUMMARY', 'CONFIRMATION', name='artifact_type', native_enum=False), nullable=False),
    sa.Column('uri', sa.String(length=1024), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('artifacts')
    op.drop_table('profile_links')
    op.drop_table('profile_files')
    op.drop_table('profile_facts')
    op.drop_table('applications')
    op.drop_table('whitelist')
    op.drop_index(op.f('ix_trust_events_domain_root'), table_name='trust_events')
    op.drop_table('trust_events')
    op.drop_table('profile_identities')
    op.drop_index(op.f('ix_jobs_domain_root'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_job_sources_domain_root'), table_name='job_sources')
    op.drop_table('job_sources')
    # ### end Alembic commands ###
